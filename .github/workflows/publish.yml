# This workflows will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

name: Build and Run
on:
  release:
    types:
      - prereleased
      - released
jobs:
  publish-to-github-as-npm:
    name: '(RE) Publish to github as npm package'
    runs-on: ubuntu-latest
    steps:
      - name: 'Read commit args'
        id: args
        uses: LamaAni/parse-commit-args-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: 'checkout the code'
        uses: actions/checkout@v2

      - name: 'setup nodejs'
        uses: actions/setup-node@v2
        with:
          node-version: '12.x'
          registry-url: 'https://npm.pkg.github.com'
          scope: '@lamaani'

      - name: 'Publish version to github'
        run: |
          echo "Publishing version ${{steps.args.outputs.version}}" &&
          git config --global user.email "actions@not-a-server.com" &&
          git config --global user.name "github actions" &&
          git fetch &&
          git checkout master &&
          git pull &&
          npm version '${{steps.args.outputs.version}}' &&
          npm publish && 
          git push origin HEAD
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # create_node_js_docker:
  #   runs-on: ubuntu-latest
  #   name: 'Create nodejs docker'
  #   steps:
  #     - name: 'Read commit args'
  #       id: args
  #       uses: LamaAni/parse-commit-args-action@master
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  #     - uses: actions/checkout@v2

  #     - name: 'build & push'
  #       run: |
  #         docker/build
  #       env:
  #         DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  #         DOCKER_USERNAME: lamaani
  #         DOCKER_REPOSITORY: lamaani/stratis
  #         IMAGE_TAGS: '${{ steps.args.outputs.versions }} latest'
